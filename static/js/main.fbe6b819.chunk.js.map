{"version":3,"sources":["components/ContentHeader.js","components/ProductList.js","actions/API/CONTENTLISTINGPAGE-PAGE1.js","actions/index.js","App.js","serviceWorker.js","reducers/index.js","rootReducer.js","index.js"],"names":["ContentHeader","props","class","style","backgroundImage","alt","src","className","title","href","xmlns","viewBox","d","MovieList","movieListData","this","movieList","map","result","key","page","content_items","content","item","index","console","log","name","posterimage","React","Component","page_one","fetchProducts","dispatch","fetchProductsBegin","Promise","resolve","setTimeout","products","dataone","then","json","fetchProductsSuccess","catch","error","fetchProductsFailure","type","payload","App","loading","message","r","length","ProductList","connect","state","items","Boolean","window","location","hostname","match","initialState","combineReducers","action","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fbe6b819.chunk.js","sourcesContent":["import React from 'react'\n\nlet backArrow = 'Slices/Back.png';\nlet Background = 'Slices/nav_bar.png'\nconst ContentHeader = (props) => {\n    return (\n        <nav class=\"flex items-center justify-between flex-wrap  p-6 sticky top-0\" style={{ backgroundImage: \"url(\" + Background + \")\" }}  >\n            <div class=\"flex items-center flex-shrink-0 text-white mr-6\">\n                <span class=\"font-semibold text-xl tracking-tight\">\n                    <img alt=\"\" class=\"h-4\" src={backArrow}></img></span> <span className=\"px-3 SemiBold\">{props.title} </span> \n            </div>\n            <div>\n                <a href=\"#\" class=\" text-sm px-4 py-2 \n                text-white   mt-4 lg:mt-0\"\n                ><svg class=\"fill-current pointer-events-none text-grey-darkest w-4 h-4 inline\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                        <path d=\"M12.9 14.32a8 8 0 1 1 1.41-1.41l5.35 5.33-1.42 1.42-5.33-5.34zM8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12z\"></path>\n                </svg>\n               </a>\n            </div>\n        </nav>\n\n    );\n}\n\nexport default ContentHeader;\n\n","import React from \"react\";\n\nclass MovieList extends React.Component {\n\n    render() {\n        //console.log(\"getdataget==\" + this.props.movieList.length)\n        let movieListData = this.props.movieList.map((result, key) => {\n            //console.log(\"key=\" + key)\n            //console.log(result.page.content_items.content)\n            return result.page.content_items.content.map((item, index) => {\n                console.log(item.name)\n                return (\n                    <div key={index} class=\" \">\n                        <div className=\"img\">\n                            <img className=\"w-20\" src={`Slices/${item.posterimage}`} alt={item.name} />\n                        </div>\n                        <div className=\"caption\">\n                            <p>{item.name}</p>\n                        </div>\n\n                    </div>\n\n\n\n                )\n            });\n        });\n        return (\n            <div className=\"inline-grid grid-cols-3 gap-x-4 \" >\n                {movieListData}\n            </div >\n        )\n    }\n}\n\nexport default MovieList;\n\n\n","const page_one = [\n  {\n    \"page\": {\n      \"title\": \"Romantic Comedy\",\n      \"total-content-items\": \"54\",\n      \"page-num-requested\": \"1\",\n      \"page-size-requested\": \"20\",\n      \"page-size-returned\": \"20\",\n      \"content_items\": {\n        \"content\": [\n          {\n            \"name\": \"The Birds\",\n            \"posterimage\": \"poster1.jpg\"\n          },\n          {\n            \"name\": \"Rear Window\",\n            \"posterimage\": \"poster2.jpg\"\n          },\n          {\n            \"name\": \"Family Pot\",\n            \"posterimage\": \"poster3.jpg\"\n          },\n          {\n            \"name\": \"Family Pot\",\n            \"posterimage\": \"poster2.jpg\"\n          },\n          {\n            \"name\": \"Rear Window\",\n            \"posterimage\": \"poster1.jpg\"\n          },\n          {\n            \"name\": \"The Birds\",\n            \"posterimage\": \"poster3.jpg\"\n          },\n          {\n            \"name\": \"Rear Window\",\n            \"posterimage\": \"poster3.jpg\"\n          },\n          {\n            \"name\": \"The Birds\",\n            \"posterimage\": \"poster2.jpg\"\n          },\n          {\n            \"name\": \"Family Pot\",\n            \"posterimage\": \"poster1.jpg\"\n          },\n          {\n            \"name\": \"The Birds\",\n            \"posterimage\": \"poster1.jpg\"\n          },\n          {\n            \"name\": \"The Birds\",\n            \"posterimage\": \"poster1.jpg\"\n          },\n          {\n            \"name\": \"Rear Window\",\n            \"posterimage\": \"poster2.jpg\"\n          },\n          {\n            \"name\": \"Family Pot\",\n            \"posterimage\": \"poster3.jpg\"\n          },\n          {\n            \"name\": \"Family Pot\",\n            \"posterimage\": \"poster2.jpg\"\n          },\n          {\n            \"name\": \"Rear Window\",\n            \"posterimage\": \"poster1.jpg\"\n          },\n          {\n            \"name\": \"The Birds\",\n            \"posterimage\": \"poster3.jpg\"\n          },\n          {\n            \"name\": \"Rear Window\",\n            \"posterimage\": \"poster3.jpg\"\n          },\n          {\n            \"name\": \"The Birds\",\n            \"posterimage\": \"poster2.jpg\"\n          },\n          {\n            \"name\": \"Family Pot\",\n            \"posterimage\": \"poster1.jpg\"\n          },\n          {\n            \"name\": \"The Birds\",\n            \"posterimage\": \"poster1.jpg\"\n          }\n        ]\n      }\n    }\n  }]\nexport default page_one;\n","import dataone from './API/CONTENTLISTINGPAGE-PAGE1.js'\n\n\n\n\n\nfunction getProducts() {\n    return fetch(\"/products\")\n        .then(handleErrors)\n        .then(res => res.json());\n}\n\nfunction fakeGetProducts() {\n    return new Promise(resolve => {\n        // Resolve after a timeout so we can see the loading indicator\n        setTimeout(\n            () =>\n                resolve({\n                    products: dataone\n                }),\n            1000\n        );\n    });\n}\n\nexport function fetchProducts() {\n    return dispatch => {\n        dispatch(fetchProductsBegin());\n        return fakeGetProducts()\n            .then(json => {\n                dispatch(fetchProductsSuccess(json.products));\n                return json.products;\n            })\n            .catch(error =>\n                dispatch(fetchProductsFailure(error))\n            );\n    };\n}\n\n// Handle HTTP errors since fetch won't.\nfunction handleErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n    return response;\n}\n\nexport const FETCH_PRODUCTS_BEGIN = \"FETCH_PRODUCTS_BEGIN\";\nexport const FETCH_PRODUCTS_SUCCESS =\n    \"FETCH_PRODUCTS_SUCCESS\";\nexport const FETCH_PRODUCTS_FAILURE =\n    \"FETCH_PRODUCTS_FAILURE\";\n\nexport const fetchProductsBegin = () => ({\n    type: FETCH_PRODUCTS_BEGIN\n});\n\nexport const fetchProductsSuccess = products => ({\n    type: FETCH_PRODUCTS_SUCCESS,\n    payload: { products }\n});\n\nexport const fetchProductsFailure = error => ({\n    type: FETCH_PRODUCTS_FAILURE,\n    payload: { error }\n});\n","import React, { Component, useEffect } from 'react';\nimport './styles/main.css';\nimport Header from './components/ContentHeader'\nimport ProductList from './components/ProductList'\nimport { connect } from \"react-redux\";\nimport { fetchProducts } from \"./actions/index\";\n\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchProducts());\n  }\n\n  render() {\n    const { error, loading, products } = this.props;\n\n\n\n    if (error) {\n      return <div>Error! {error.message}</div>;\n    }\n\n    if (loading) {\n      return <div>Loading...</div>;\n    }\n    const title = products.map((result, key) => {\n      return (\n        <p key={key}>{result.page.title}</p>\n      )\n    });\n\n\n    const content = products.map((r) => {\n      console.log(\"content=\" + r.page.content_items.content.length)\n      return r.page.content_items\n      //  console.log(result.page.content_items.content)\n    });\n    return (\n      <div class=\"bg-black \" >\n\n        <Header title={title} />\n        <div class=\"py-6 px-5 text-white\">\n          <ProductList loading={loading} movieList={products} />\n        </div>\n      </div>\n\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  products: state.products.items,\n  loading: state.products.loading,\n  error: state.products.error\n});\nexport default connect(mapStateToProps)(App);\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n    FETCH_PRODUCTS_BEGIN,\n    FETCH_PRODUCTS_SUCCESS,\n    FETCH_PRODUCTS_FAILURE\n} from \"../actions/index\";\n\nconst initialState = {\n    items: [],\n    loading: false,\n    error: null\n};\n\nexport default function productReducer(state = initialState, action) {\n    console.log(\"First Call\" + action.payload)\n    switch (action.type) {\n        case FETCH_PRODUCTS_BEGIN:\n            return {\n                ...state,\n                loading: true,\n                error: null\n            };\n        case FETCH_PRODUCTS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                items: action.payload.products\n            };\n\n        case FETCH_PRODUCTS_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload.error,\n                items: []\n            };\n\n        default:\n\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport products from \"./reducers/index\";\n\nexport default combineReducers({\n  products\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from \"redux\";\n\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./rootReducer\";\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n);\nReactDOM.render(<Provider store={store}>\n  <App />\n</Provider>\n  , document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}